<?xml version="1.0" encoding="utf-8" ?>
<customcontrol:CustomContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="JellyFish.ChatPage"
                                 x:Name="ChatPageWindow"
             xmlns:sensors="clr-namespace:Microsoft.Maui.Devices.Sensors;assembly=Microsoft.Maui.Essentials"
             xmlns:maps="clr-namespace:Microsoft.Maui.Controls.Maps;assembly=Microsoft.Maui.Controls.Maps"
             xmlns:mauimaps="clr-namespace:Microsoft.Maui.Maps;assembly=Microsoft.Maui.Maps"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:converter="clr-namespace:JellyFish.Converter"
             xmlns:selector="clr-namespace:JellyFish.DatatemplateSelector"
             xmlns:behaviour="clr-namespace:JellyFish.Behaviour"
             xmlns:vm="clr-namespace:JellyFish.ViewModel"
             xmlns:model="clr-namespace:JellyFish.Model"
             xmlns:customcontrol="clr-namespace:JellyFish.Controls"
             xmlns:skia="clr-namespace:SkiaSharp.Extended.UI.Controls;assembly=SkiaSharp.Extended.UI"
             xmlns:local="clr-namespace:JellyFish" 
             NavigationPage.HasNavigationBar="False" NavigationPage.HasBackButton="False" 
                                 customcontrol:BlockBackButtonAction="{Binding BlockBackSwitch}" 
                                 BackButtonCommand="{Binding BackButtonCommand}">
    

    <ContentPage.Resources>
        <Color x:Key="LightBlue">#42B0FF</Color>
        <converter:MessageStateColorConverter x:Key="MessageStateColorConverter"></converter:MessageStateColorConverter>
        <converter:DateTimeConvert x:Key="DateTimeConvert"></converter:DateTimeConvert>
        <converter:BoolInvertConverter x:Key="BoolInvertConverter"></converter:BoolInvertConverter>

        <DataTemplate x:Key="MediaElementImage">
            <Image 
                                                Source="{Binding ImageSourceFilePath}"></Image>
        </DataTemplate>

        <DataTemplate x:Key="MediaElementVideo">

            <Border 
                HeightRequest="300"
                VerticalOptions="Fill"
                HorizontalOptions="Fill"
                StrokeThickness="1" 
                Stroke="White" 
                BackgroundColor="{StaticResource Primary}">
                <Border.StrokeShape>
                    <RoundRectangle CornerRadius="25,25,25,25"></RoundRectangle>
                </Border.StrokeShape>
                <Button 
                    Command="{Binding Source={x:Reference ChatPageWindow},Path=BindingContext.PlayVideoCommand}"
                    CommandParameter="{Binding}"
                    Text="Play" 
                    HorizontalOptions="Center" 
                    VerticalOptions="Center" 
                    BackgroundColor="White" 
                    TextColor="{StaticResource Primary}"
                    FontSize="12" 
                    FontAttributes="Bold"></Button>
            </Border>
        </DataTemplate>
        <selector:MediaTemplateSelector x:Key="MediaTemplateSelector" ImageTemplate="{StaticResource MediaElementImage}" VideoTemplate="{StaticResource MediaElementVideo}"></selector:MediaTemplateSelector>

        <DataTemplate x:Key="ReceiveMessageTemplate">
            <Grid >
                <Grid.RowDefinitions>
                    <RowDefinition></RowDefinition>
                    <RowDefinition></RowDefinition>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition ></ColumnDefinition>
                    <ColumnDefinition Width="300"></ColumnDefinition>
                    <ColumnDefinition Width="50"></ColumnDefinition>
                    <ColumnDefinition ></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <FlexLayout Direction="Row" Wrap="Wrap" VerticalOptions="StartAndExpand" AlignItems="Start" JustifyContent="SpaceBetween" 
                             Grid.Row="0" Grid.RowSpan="2" Grid.Column="1" >
                    <Border BackgroundColor="SlateBlue" Padding="8,8" HorizontalOptions="Center" StrokeThickness="2" Stroke="black">
                        <Border.StrokeShape>
                            <RoundRectangle CornerRadius="10,10,10,10">
                            </RoundRectangle>
                        </Border.StrokeShape>
                        <StackLayout Orientation="Vertical" HorizontalOptions="StartAndExpand" >
                            <Label MinimumWidthRequest="300" MaximumWidthRequest="300" Text="{Binding Text}" Margin='{OnPlatform Default="5,5,5,5", Android="2,2,2,2"}' TextColor="#DE000000" FontFamily="Roboto-Medium" FontSize="{OnPlatform Android={OnIdiom Phone=15, Tablet=22}, iOS=16, UWP=16}" />
                            <Label HorizontalTextAlignment="End" Margin="5,5,5,5" Text="{Binding MessageDateTime,Converter={StaticResource DateTimeConvert}}" FontFamily="Roboto-Medium" FontSize="{OnPlatform Android={OnIdiom Phone=10, Tablet=10}, iOS=8, UWP=8}"></Label>
                        </StackLayout>
                    </Border>
                </FlexLayout>
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup Name="CommonStates">
                        <VisualState Name="Normal" />
                        <VisualState Name="Selected">
                            <VisualState.Setters>
                                <Setter Property="BackgroundColor" Value="LightBlue" />
                            </VisualState.Setters>
                        </VisualState>

                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="LinkReceiveMessageTemplate">
            <Grid >
                <Grid.RowDefinitions>
                    <RowDefinition></RowDefinition>
                    <RowDefinition></RowDefinition>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition ></ColumnDefinition>
                    <ColumnDefinition Width="300"></ColumnDefinition>
                    <ColumnDefinition Width="50"></ColumnDefinition>
                    <ColumnDefinition ></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <FlexLayout Direction="Row" Wrap="Wrap" VerticalOptions="Start" AlignContent="Start" AlignItems="Start" 
                            Grid.Row="0" Grid.RowSpan="2" Grid.Column="1" >
                    <Border BackgroundColor="SlateBlue" Padding="8,8" HorizontalOptions="Center" StrokeThickness="2" Stroke="black">
                        <Border.StrokeShape>
                            <RoundRectangle CornerRadius="10,10,10,10">
                            </RoundRectangle>
                        </Border.StrokeShape>
                        <StackLayout Orientation="Vertical" HorizontalOptions="StartAndExpand" >
                            <StackLayout x:Name="LottiStackLayout" Orientation="Vertical">
                                <skia:SKLottieView
                              Source="website.json"
                              RepeatCount="-1" 
                            RepeatMode="Restart"
                        HorizontalOptions="Center"
                                HeightRequest="200"
                                WidthRequest="280"/>
                            </StackLayout>
                            <StackLayout Orientation="Vertical" HorizontalOptions="StartAndExpand" >
                                <Label MinimumWidthRequest="300" MaximumWidthRequest="300" Text="{Binding Text}" Margin='{OnPlatform Default="5,5,5,5", Android="2,2,2,2"}' TextColor="#DE000000" FontFamily="Roboto-Medium" FontSize="{OnPlatform Android={OnIdiom Phone=15, Tablet=22}, iOS=16, UWP=16}" />
                                <Label HorizontalTextAlignment="End" Margin="5,5,5,5" Text="{Binding MessageDateTime,Converter={StaticResource DateTimeConvert}}" FontFamily="Roboto-Medium" FontSize="{OnPlatform Android={OnIdiom Phone=10, Tablet=10}, iOS=8, UWP=8}"></Label>
                            </StackLayout>
                        </StackLayout>
                    </Border>
                </FlexLayout>
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup Name="CommonStates">
                        <VisualState Name="Normal" />
                        <VisualState Name="Selected">
                            <VisualState.Setters>
                                <Setter Property="BackgroundColor" Value="LightBlue" />
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="GpsReceiveMessageTemplate">
            <Grid >
                <Grid.RowDefinitions>
                    <RowDefinition></RowDefinition>
                    <RowDefinition></RowDefinition>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition ></ColumnDefinition>
                    <ColumnDefinition Width="300"></ColumnDefinition>
                    <ColumnDefinition Width="50"></ColumnDefinition>
                    <ColumnDefinition ></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <FlexLayout Direction="Row" Wrap="Wrap" VerticalOptions="Start" AlignContent="Start" AlignItems="Start" 
                            Grid.Row="0" Grid.RowSpan="2" Grid.Column="1">
                    <Border BackgroundColor="SlateBlue" Padding="8,8" VerticalOptions="Start" HorizontalOptions="Center" StrokeThickness="2" Stroke="black">
                        <Border.StrokeShape>
                            <RoundRectangle CornerRadius="10,10,10,10">
                            </RoundRectangle>
                        </Border.StrokeShape>
                        <StackLayout Orientation="Vertical" HorizontalOptions="StartAndExpand" >
                            <StackLayout x:Name="LottiStackLayout" Orientation="Vertical">
                                <skia:SKLottieView
                              Source="map-routing.json"
                              RepeatCount="-1" 
                            RepeatMode="Restart"
                        HorizontalOptions="Center"
                                HeightRequest="200"
                                WidthRequest="280"/>
                            </StackLayout>

                            <StackLayout Orientation="Vertical" HorizontalOptions="StartAndExpand" >
                                <Label MinimumWidthRequest="300" MaximumWidthRequest="300" Text="{Binding LocationStr}" Margin='{OnPlatform Default="5,5,5,5", Android="2,2,2,2"}' TextColor="#DE000000" FontFamily="Roboto-Medium" FontSize="{OnPlatform Android={OnIdiom Phone=10, Tablet=22}, iOS=10, UWP=10}" />
                                <Label MinimumWidthRequest="300" MaximumWidthRequest="300" Text="{Binding Text}" IsVisible="{Binding HasText}" Margin='{OnPlatform Default="5,5,5,5", Android="2,2,2,2"}' TextColor="#DE000000" FontFamily="Roboto-Medium" FontSize="{OnPlatform Android={OnIdiom Phone=15, Tablet=22}, iOS=16, UWP=16}" />
                                <Label HorizontalTextAlignment="End" Margin="5,5,5,5" Text="{Binding MessageDateTime,Converter={StaticResource DateTimeConvert}}" FontFamily="Roboto-Medium" FontSize="{OnPlatform Android={OnIdiom Phone=10, Tablet=10}, iOS=8, UWP=8}"></Label>
                            </StackLayout>
                        </StackLayout>
                    </Border>
                </FlexLayout>
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup Name="CommonStates">
                        <VisualState Name="Normal" />
                        <VisualState Name="Selected">
                            <VisualState.Setters>
                                <Setter Property="BackgroundColor" Value="LightBlue" />
                            </VisualState.Setters>
                        </VisualState>

                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="ImageReceiveMessageTemplate">
            <Grid >
                <Grid.RowDefinitions>
                    <RowDefinition></RowDefinition>
                    <RowDefinition></RowDefinition>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition ></ColumnDefinition>
                    <ColumnDefinition Width="300"></ColumnDefinition>
                    <ColumnDefinition Width="50"></ColumnDefinition>
                    <ColumnDefinition ></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <FlexLayout Direction="Row" Wrap="Wrap" VerticalOptions="StartAndExpand" AlignContent="Start" AlignItems="Start" JustifyContent="SpaceBetween" 
                            Grid.Row="0" Grid.RowSpan="2" Grid.Column="1" >
                    <Border BackgroundColor="SlateBlue" Padding="8,8" HorizontalOptions="Center" StrokeThickness="2" Stroke="black">
                        <Border.StrokeShape>
                            <RoundRectangle CornerRadius="10,10,10,10">
                            </RoundRectangle>
                        </Border.StrokeShape>
                        <StackLayout Orientation="Vertical" HorizontalOptions="StartAndExpand" >
                            <CollectionView ItemsSource="{Binding Images}" ItemTemplate="{StaticResource MediaTemplateSelector}">
                                <CollectionView.ItemsLayout>
                                    <LinearItemsLayout ItemSpacing="5" Orientation="Vertical"></LinearItemsLayout>
                                </CollectionView.ItemsLayout>
                            </CollectionView>
                            <StackLayout Orientation="Vertical" HorizontalOptions="End" >
                                <Label MinimumWidthRequest="300" MaximumWidthRequest="300" Text="{Binding Text}" IsVisible="{Binding HasText}" Margin='{OnPlatform Default="5,5,5,5", Android="2,2,2,2"}' TextColor="#DE000000" FontFamily="Roboto-Medium" FontSize="{OnPlatform Android={OnIdiom Phone=15, Tablet=22}, iOS=16, UWP=16}" />
                                <Label HorizontalTextAlignment="End" Margin="5,5,5,5" Text="{Binding MessageDateTime,Converter={StaticResource DateTimeConvert}}" FontFamily="Roboto-Medium" FontSize="{OnPlatform Android={OnIdiom Phone=10, Tablet=10}, iOS=8, UWP=8}"></Label>
                            </StackLayout>
                        </StackLayout>
                    </Border>

                </FlexLayout>
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup Name="CommonStates">
                        <VisualState Name="Normal" />
                        <VisualState Name="Selected">
                            <VisualState.Setters>
                                <Setter Property="BackgroundColor" Value="LightBlue" />
                            </VisualState.Setters>
                        </VisualState>

                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="ContactReceiveMessageTemplate">
            <Grid >
                <Grid.RowDefinitions>
                    <RowDefinition></RowDefinition>
                    <RowDefinition></RowDefinition>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition ></ColumnDefinition>
                    <ColumnDefinition Width="300"></ColumnDefinition>
                    <ColumnDefinition Width="50"></ColumnDefinition>
                    <ColumnDefinition ></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <FlexLayout Direction="Row" Wrap="Wrap" VerticalOptions="StartAndExpand" AlignContent="Start" AlignItems="Start" JustifyContent="SpaceBetween" 
                            Grid.Row="0" Grid.RowSpan="2" Grid.Column="1" >
                    <Border BackgroundColor="SlateBlue" Padding="8,8" HorizontalOptions="Center" StrokeThickness="2" Stroke="black">
                        <Border.StrokeShape>
                            <RoundRectangle CornerRadius="10,10,10,10">
                            </RoundRectangle>
                        </Border.StrokeShape>
                        <StackLayout Orientation="Vertical" HorizontalOptions="StartAndExpand" >
                            <HorizontalStackLayout >
                                <Path Data="{StaticResource icons8contactssvg}" HeightRequest="30" WidthRequest="30" Stroke="{StaticResource White}"></Path>
                                <Label Text="{Binding Contact.DisplayName}" IsVisible="{Binding IsContact}" Margin='{OnPlatform Default="5,5,5,5", Android="2,2,2,2"}' TextColor="#DE000000" FontFamily="Roboto-Medium" FontSize="{OnPlatform Android={OnIdiom Phone=15, Tablet=22}, iOS=16, UWP=16}" />

                            </HorizontalStackLayout>
                            <StackLayout Orientation="Vertical" HorizontalOptions="End" >
                                <Label MinimumWidthRequest="300" MaximumWidthRequest="300" Text="{Binding Text}" IsVisible="{Binding HasText}" Margin='{OnPlatform Default="5,5,5,5", Android="2,2,2,2"}' TextColor="#DE000000" FontFamily="Roboto-Medium" FontSize="{OnPlatform Android={OnIdiom Phone=15, Tablet=22}, iOS=16, UWP=16}" />
                                <Label HorizontalTextAlignment="End" Margin="5,5,5,5" Text="{Binding MessageDateTime,Converter={StaticResource DateTimeConvert}}" FontFamily="Roboto-Medium" FontSize="{OnPlatform Android={OnIdiom Phone=10, Tablet=10}, iOS=8, UWP=8}"></Label>
                            </StackLayout>
                        </StackLayout>
                    </Border>

                </FlexLayout>
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup Name="CommonStates">
                        <VisualState Name="Normal" />
                        <VisualState Name="Selected">
                            <VisualState.Setters>
                                <Setter Property="BackgroundColor" Value="LightBlue" />
                            </VisualState.Setters>
                        </VisualState>

                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="SendMessageTemplate">
            
            <Grid >
                <Grid.RowDefinitions>
                    <RowDefinition></RowDefinition>
                    <RowDefinition></RowDefinition>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition ></ColumnDefinition>
                    <ColumnDefinition Width="50"></ColumnDefinition>
                    <ColumnDefinition Width="300"></ColumnDefinition>
                    <ColumnDefinition ></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <SwipeView Grid.Row="0" Grid.RowSpan="2" Grid.Column="2" >
                    <SwipeView.LeftItems>
                        <SwipeItem Text="t" BackgroundColor="Red" Command="{Binding Source={RelativeSource AncestorType={x:Type ContentPage},Mode=FindAncestor},Path=BindingContext.MessageSwipeLeftCommand}"></SwipeItem>
                    </SwipeView.LeftItems>

                    <FlexLayout Direction="Row" Wrap="Wrap" VerticalOptions="StartAndExpand" AlignItems="End" JustifyContent="SpaceBetween" 
                            BackgroundColor="Transparent">

                        <Border BackgroundColor="Green" Padding="8,8" HorizontalOptions="Center" StrokeThickness="2" Stroke="black">
                            <Border.StrokeShape>
                                <RoundRectangle CornerRadius="10,10,10,10">
                                </RoundRectangle>
                            </Border.StrokeShape>
                            <StackLayout Orientation="Vertical" HorizontalOptions="StartAndExpand">
                                <Label MinimumWidthRequest="300" MaximumWidthRequest="300" Text="{Binding Text}" Margin='{OnPlatform Default="5,5,5,5", Android="2,2,2,2"}' TextColor="#DE000000" FontFamily="Roboto-Medium" FontSize="{OnPlatform Android={OnIdiom Phone=15, Tablet=22}, iOS=16, UWP=16}" />
                                <StackLayout Orientation="Horizontal" HorizontalOptions="End" VerticalOptions="Center" >
                                    <Label HorizontalTextAlignment="End" Margin="5,5,5,5" Text="{Binding MessageDateTime,Converter={StaticResource DateTimeConvert}}" FontFamily="Roboto-Medium" FontSize="{OnPlatform Android={OnIdiom Phone=10, Tablet=10}, iOS=8, UWP=8}"></Label>
                                    <ActivityIndicator HorizontalOptions="End" HeightRequest="10" WidthRequest="10" IsVisible="{Binding SendToBackendActionProgressBar,Mode=OneWay}" IsRunning="{Binding SendToBackendActionProgressBar,Mode=OneWay}"></ActivityIndicator>
                                    <Grid>
                                        <Path ZIndex="1" Margin="-10,0,0,0" Data="{StaticResource SendToBackendSvg}" Stroke="{Binding ReceiverGetMessage,Mode=OneWay,Converter={StaticResource MessageStateColorConverter}}" StrokeMiterLimit="10" StrokeThickness="2" HeightRequest="20" WidthRequest="20">

                                        </Path>
                                        <Path ZIndex="2" Data="{StaticResource SendToBackendSvg}" Stroke="{Binding SendToBackend,Mode=OneWay,Converter={StaticResource MessageStateColorConverter}}" StrokeMiterLimit="10" StrokeThickness="2" HeightRequest="20" WidthRequest="20">

                                        </Path>
                                        
                                    </Grid>
                                    
                                </StackLayout>
                                </StackLayout>
                        </Border>
                    </FlexLayout>
                </SwipeView>

                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup Name="CommonStates">
                        <VisualState Name="Normal" />
                        <VisualState Name="Selected">
                            <VisualState.Setters>
                                <Setter Property="BackgroundColor" Value="LightBlue" />
                            </VisualState.Setters>
                        </VisualState>

                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
            </Grid>

        </DataTemplate>
        <DataTemplate x:Key="LinkSendMessageTemplate">
            <Grid >
                <Grid.RowDefinitions>
                    <RowDefinition></RowDefinition>
                    <RowDefinition></RowDefinition>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition ></ColumnDefinition>
                    <ColumnDefinition Width="50"></ColumnDefinition>
                    <ColumnDefinition Width="300"></ColumnDefinition>
                    <ColumnDefinition ></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <FlexLayout Direction="Row" Wrap="Wrap" VerticalOptions="StartAndExpand" AlignContent="Start" AlignItems="End" JustifyContent="SpaceBetween" 
                            Grid.Row="0" Grid.RowSpan="2" Grid.Column="2" >

                    <!-- <Border BackgroundColor="Green" Padding="8,8" HorizontalOptions="Center" StrokeThickness="2" Stroke="black">
                        <Border.StrokeShape>
                            <RoundRectangle CornerRadius="10,10,10,10">
                            </RoundRectangle>
                        </Border.StrokeShape>
                        <StackLayout Orientation="Vertical" HorizontalOptions="StartAndExpand">
                            <WebView IsVisible="{Binding IsLink}" Source="{Binding FoundedUrlInText}" HeightRequest="150" IsEnabled="False"></WebView>
                        </StackLayout>
                    </Border>-->
                    <Border BackgroundColor="Green" Padding="8,8" HorizontalOptions="Center" StrokeThickness="2" Stroke="black">
                        <Border.StrokeShape>
                            <RoundRectangle CornerRadius="10,10,10,10">
                            </RoundRectangle>
                        </Border.StrokeShape>
                        <StackLayout Orientation="Vertical" HorizontalOptions="StartAndExpand">

                            <StackLayout x:Name="LottiStackLayout" Orientation="Vertical">
                                <skia:SKLottieView
                              Source="website.json"
                              RepeatCount="-1" 
                            RepeatMode="Restart"
                        HorizontalOptions="Center"
                                HeightRequest="200"
                                WidthRequest="280"/>
                            </StackLayout>
                            <Label MinimumWidthRequest="300" MaximumWidthRequest="300" Text="{Binding Text}" Margin='{OnPlatform Default="5,5,5,5", Android="2,2,2,2"}' TextColor="#DE000000" FontFamily="Roboto-Medium" FontSize="{OnPlatform Android={OnIdiom Phone=15, Tablet=22}, iOS=16, UWP=16}" />
                            <StackLayout Orientation="Horizontal" HorizontalOptions="End" VerticalOptions="Center" >
                                <Label HorizontalTextAlignment="End" Margin="5,5,5,5" Text="{Binding MessageDateTime,Converter={StaticResource DateTimeConvert}}" FontFamily="Roboto-Medium" FontSize="{OnPlatform Android={OnIdiom Phone=10, Tablet=10}, iOS=8, UWP=8}"></Label>
                                <ActivityIndicator HorizontalOptions="End" HeightRequest="10" WidthRequest="10" IsVisible="{Binding SendToBackendActionProgressBar,Mode=OneWay}" IsRunning="{Binding SendToBackendActionProgressBar,Mode=OneWay}"></ActivityIndicator>
                                <Grid>
                                    <Path ZIndex="1" Margin="-10,0,0,0" Data="{StaticResource SendToBackendSvg}" Stroke="#42B0FF" StrokeMiterLimit="10" StrokeThickness="2" HeightRequest="20" WidthRequest="20">

                                    </Path>
                                    <Path ZIndex="2" Data="{StaticResource SendToBackendSvg}" Stroke="#42B0FF" StrokeMiterLimit="10" StrokeThickness="2" HeightRequest="20" WidthRequest="20">

                                    </Path>
                                </Grid>

                            </StackLayout>
                        </StackLayout>
                    </Border>
                </FlexLayout>
                


                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup Name="CommonStates">
                        <VisualState Name="Normal" />
                        <VisualState Name="Selected">
                            <VisualState.Setters>
                                <Setter Property="BackgroundColor" Value="LightBlue" />
                            </VisualState.Setters>
                        </VisualState>

                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="GpsSendMessageTemplate">
            <Grid >
                <Grid.RowDefinitions>
                    <RowDefinition></RowDefinition>
                    <RowDefinition></RowDefinition>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition ></ColumnDefinition>
                    <ColumnDefinition Width="50"></ColumnDefinition>
                    <ColumnDefinition Width="300"></ColumnDefinition>
                    <ColumnDefinition ></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <FlexLayout Direction="Row" Wrap="Wrap" VerticalOptions="StartAndExpand" AlignContent="Start" AlignItems="End" JustifyContent="SpaceBetween" 
                            Grid.Row="0" Grid.RowSpan="2" Grid.Column="2" >
                    <Border BackgroundColor="Green" Padding="8,8" HorizontalOptions="Center" StrokeThickness="2" Stroke="black">
                        <Border.StrokeShape>
                            <RoundRectangle CornerRadius="10,10,10,10">
                            </RoundRectangle>
                        </Border.StrokeShape>
                        <StackLayout Orientation="Vertical" HorizontalOptions="StartAndExpand">
                            <StackLayout x:Name="LottiStackLayout" Orientation="Vertical">
                                <skia:SKLottieView
                              Source="map-routing.json"
                              RepeatCount="-1" 
                            RepeatMode="Restart"
                        HorizontalOptions="Center"
                                HeightRequest="200"
                                WidthRequest="280"/>
                            </StackLayout>
                            <StackLayout Orientation="Vertical" HorizontalOptions="StartAndExpand">
                                <Label MinimumWidthRequest="300" MaximumWidthRequest="300" Text="{Binding LocationStr}" Margin='{OnPlatform Default="5,5,5,5", Android="2,2,2,2"}' TextColor="#DE000000" FontFamily="Roboto-Medium" FontSize="{OnPlatform Android={OnIdiom Phone=10, Tablet=22}, iOS=10, UWP=10}" />
                                <Label MinimumWidthRequest="300" MaximumWidthRequest="300" Text="{Binding Text}" IsVisible="{Binding HasText}" Margin='{OnPlatform Default="5,5,5,5", Android="2,2,2,2"}' TextColor="#DE000000" FontFamily="Roboto-Medium" FontSize="{OnPlatform Android={OnIdiom Phone=15, Tablet=22}, iOS=16, UWP=16}" />
                                <StackLayout Orientation="Horizontal" HorizontalOptions="End" VerticalOptions="Center" >
                                    <Label HorizontalTextAlignment="End" Margin="5,5,5,5" Text="{Binding MessageDateTime,Converter={StaticResource DateTimeConvert}}" FontFamily="Roboto-Medium" FontSize="{OnPlatform Android={OnIdiom Phone=10, Tablet=10}, iOS=8, UWP=8}"></Label>
                                    <ActivityIndicator HorizontalOptions="End" HeightRequest="10" WidthRequest="10" IsVisible="{Binding SendToBackendActionProgressBar,Mode=OneWay}" IsRunning="{Binding SendToBackendActionProgressBar,Mode=OneWay}"></ActivityIndicator>
                                    <Grid>
                                        <Path ZIndex="1" Margin="-10,0,0,0" Data="{StaticResource SendToBackendSvg}" Stroke="#42B0FF" StrokeMiterLimit="10" StrokeThickness="2" HeightRequest="20" WidthRequest="20">

                                        </Path>
                                        <Path ZIndex="2" Data="{StaticResource SendToBackendSvg}" Stroke="#42B0FF" StrokeMiterLimit="10" StrokeThickness="2" HeightRequest="20" WidthRequest="20">

                                        </Path>
                                    </Grid>

                                </StackLayout>
                            </StackLayout>
                        </StackLayout>
                    </Border>
                </FlexLayout>
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup Name="CommonStates">
                        <VisualState Name="Normal" />
                        <VisualState Name="Selected">
                            <VisualState.Setters>
                                <Setter Property="BackgroundColor" Value="LightBlue" />
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="ImageSendMessageTemplate">
            <Grid >
                <Grid.RowDefinitions>
                    <RowDefinition></RowDefinition>
                    <RowDefinition></RowDefinition>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition ></ColumnDefinition>
                    <ColumnDefinition Width="50"></ColumnDefinition>
                    <ColumnDefinition Width="300"></ColumnDefinition>
                    <ColumnDefinition ></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <FlexLayout Direction="Row" Wrap="Wrap" VerticalOptions="StartAndExpand" AlignContent="Start"  AlignItems="End" JustifyContent="SpaceBetween" 
                            Grid.Row="0" Grid.RowSpan="2" Grid.Column="2" >
                    <Border BackgroundColor="Green" Padding="8,8" HorizontalOptions="Center" StrokeThickness="2" Stroke="black">
                        <Border.StrokeShape>
                            <RoundRectangle CornerRadius="10,10,10,10">
                            </RoundRectangle>
                        </Border.StrokeShape>
                        <StackLayout Orientation="Vertical" HorizontalOptions="StartAndExpand">
                            <CollectionView ItemsSource="{Binding Images}" ItemTemplate="{StaticResource MediaTemplateSelector}">
                                <CollectionView.ItemsLayout>
                                    <LinearItemsLayout ItemSpacing="5" Orientation="Vertical"></LinearItemsLayout>
                                </CollectionView.ItemsLayout>
                            </CollectionView>
                            <StackLayout Orientation="Vertical" HorizontalOptions="StartAndExpand">
                                <Label MinimumWidthRequest="300" MaximumWidthRequest="300" Text="{Binding Text}" IsVisible="{Binding HasText}" Margin='{OnPlatform Default="5,5,5,5", Android="2,2,2,2"}' TextColor="#DE000000" FontFamily="Roboto-Medium" FontSize="{OnPlatform Android={OnIdiom Phone=15, Tablet=22}, iOS=16, UWP=16}" />
                                <StackLayout Orientation="Horizontal" HorizontalOptions="End" VerticalOptions="Center" >
                                    <Label HorizontalTextAlignment="End" Margin="5,5,5,5" Text="{Binding MessageDateTime,Converter={StaticResource DateTimeConvert}}" FontFamily="Roboto-Medium" FontSize="{OnPlatform Android={OnIdiom Phone=10, Tablet=10}, iOS=8, UWP=8}"></Label>
                                    <ActivityIndicator HorizontalOptions="End" HeightRequest="10" WidthRequest="10" IsVisible="{Binding SendToBackendActionProgressBar,Mode=OneWay}" IsRunning="{Binding SendToBackendActionProgressBar,Mode=OneWay}"></ActivityIndicator>
                                    <Grid>
                                        <Path ZIndex="1" Margin="-10,0,0,0" Data="{StaticResource SendToBackendSvg}" Stroke="#42B0FF" StrokeMiterLimit="10" StrokeThickness="2" HeightRequest="20" WidthRequest="20">

                                        </Path>
                                        <Path ZIndex="2" Data="{StaticResource SendToBackendSvg}" Stroke="#42B0FF" StrokeMiterLimit="10" StrokeThickness="2" HeightRequest="20" WidthRequest="20">

                                        </Path>
                                    </Grid>

                                </StackLayout>
                            </StackLayout>
                        </StackLayout>
                    </Border>
                    
                </FlexLayout>
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup Name="CommonStates">
                        <VisualState Name="Normal" />
                        <VisualState Name="Selected">
                            <VisualState.Setters>
                                <Setter Property="BackgroundColor" Value="LightBlue" />
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="ContactSendMessageTemplate">
            <Grid >
                <Grid.RowDefinitions>
                    <RowDefinition></RowDefinition>
                    <RowDefinition></RowDefinition>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition ></ColumnDefinition>
                    <ColumnDefinition Width="50"></ColumnDefinition>
                    <ColumnDefinition Width="300"></ColumnDefinition>
                    <ColumnDefinition ></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <FlexLayout Direction="Row" Wrap="Wrap" VerticalOptions="StartAndExpand" AlignContent="Start"  AlignItems="End" JustifyContent="SpaceBetween" 
                            Grid.Row="0" Grid.RowSpan="2" Grid.Column="2" >
                    <Border BackgroundColor="Green" Padding="8,8" HorizontalOptions="Center" StrokeThickness="2" Stroke="black">
                        <Border.StrokeShape>
                            <RoundRectangle CornerRadius="10,10,10,10">
                            </RoundRectangle>
                        </Border.StrokeShape>
                        <StackLayout Orientation="Vertical" HorizontalOptions="StartAndExpand">
                            <HorizontalStackLayout>
                                <Path Data="{StaticResource icons8contactssvg}" HeightRequest="30" WidthRequest="30" Stroke="{StaticResource White}"></Path>
                                <Label Text="{Binding Contact.DisplayName}" IsVisible="{Binding IsContact}" Margin='{OnPlatform Default="5,5,5,5", Android="2,2,2,2"}' TextColor="#DE000000" FontFamily="Roboto-Medium" FontSize="{OnPlatform Android={OnIdiom Phone=15, Tablet=22}, iOS=16, UWP=16}" />

                            </HorizontalStackLayout>
                            <StackLayout Orientation="Vertical" HorizontalOptions="StartAndExpand">
                                <Label MinimumWidthRequest="300" MaximumWidthRequest="300" Text="{Binding Text}" IsVisible="{Binding HasText}" Margin='{OnPlatform Default="5,5,5,5", Android="2,2,2,2"}' TextColor="#DE000000" FontFamily="Roboto-Medium" FontSize="{OnPlatform Android={OnIdiom Phone=15, Tablet=22}, iOS=16, UWP=16}" />
                                <StackLayout Orientation="Horizontal" HorizontalOptions="End" VerticalOptions="Center" >
                                    <Label HorizontalTextAlignment="End" Margin="5,5,5,5" Text="{Binding MessageDateTime,Converter={StaticResource DateTimeConvert}}" FontFamily="Roboto-Medium" FontSize="{OnPlatform Android={OnIdiom Phone=10, Tablet=10}, iOS=8, UWP=8}"></Label>
                                    <ActivityIndicator HorizontalOptions="End" HeightRequest="10" WidthRequest="10" IsVisible="{Binding SendToBackendActionProgressBar,Mode=OneWay}" IsRunning="{Binding SendToBackendActionProgressBar,Mode=OneWay}"></ActivityIndicator>
                                    <Grid>
                                        <Path ZIndex="1" Margin="-10,0,0,0" Data="{StaticResource SendToBackendSvg}" Stroke="#42B0FF" StrokeMiterLimit="10" StrokeThickness="2" HeightRequest="20" WidthRequest="20">

                                        </Path>
                                        <Path ZIndex="2" Data="{StaticResource SendToBackendSvg}" Stroke="#42B0FF" StrokeMiterLimit="10" StrokeThickness="2" HeightRequest="20" WidthRequest="20">

                                        </Path>
                                    </Grid>

                                </StackLayout>
                            </StackLayout>
                        </StackLayout>
                    </Border>

                </FlexLayout>
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup Name="CommonStates">
                        <VisualState Name="Normal" />
                        <VisualState Name="Selected">
                            <VisualState.Setters>
                                <Setter Property="BackgroundColor" Value="LightBlue" />
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="MessageListDateSeparator">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition></RowDefinition>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition></ColumnDefinition>
                    <ColumnDefinition Width="100"></ColumnDefinition>
                    <ColumnDefinition ></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <FlexLayout Direction="Row" Wrap="Wrap" VerticalOptions="StartAndExpand" HorizontalOptions="Center" AlignItems="Center" JustifyContent="SpaceBetween" 
                            Grid.Row="0" Grid.RowSpan="2" Grid.Column="1" >
                    <Border  BackgroundColor="Gray" Padding="8,8" HorizontalOptions="Center" StrokeThickness="6" Stroke="Transparent">
                        <Border.StrokeShape>
                            <RoundRectangle CornerRadius="10,10,10,10">
                            </RoundRectangle>
                        </Border.StrokeShape>
                        <Label HorizontalTextAlignment="Center" Margin="5,5,5,5" Text="{Binding}" FontFamily="Roboto-Medium" FontSize="{OnPlatform Android={OnIdiom Phone=10, Tablet=10}, iOS=8, UWP=8}"></Label>
                    </Border>
                </FlexLayout>
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup Name="CommonStates">
                        <VisualState Name="Normal" />
                        <VisualState Name="Selected">
                            <VisualState.Setters>
                                <Setter Property="BackgroundColor" Value="LightBlue" />
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
            </Grid>
        </DataTemplate>


        <selector:MessageDataTemplateSelector x:Key="MessageTemplateSelector" 
                                              GpsReceiveMessageTemplate="{StaticResource GpsReceiveMessageTemplate}"
                                              GpsSendMessageTemplate="{StaticResource GpsSendMessageTemplate}"
                                              LinkReceiveMessageTemplate="{StaticResource LinkReceiveMessageTemplate}"
                                              LinkSendMessageTemplate="{StaticResource LinkSendMessageTemplate}"
                                              ReceiveMessageTemplate="{StaticResource ReceiveMessageTemplate}" 
                                              SendMessageTemplate="{StaticResource SendMessageTemplate}"
                                              ImageReceiveMessageTemplate="{StaticResource ImageReceiveMessageTemplate}"
                                              ImageSendMessageTemplate="{StaticResource ImageSendMessageTemplate}"
                                              ContactReceiveMessageTemplate="{StaticResource ContactReceiveMessageTemplate}"
                                              ContactSendMessageTemplate="{StaticResource ContactSendMessageTemplate}">
        </selector:MessageDataTemplateSelector>

        
    </ContentPage.Resources>

    <Grid x:Name="Layout">
        <Grid.ColumnDefinitions>
            <ColumnDefinition>

            </ColumnDefinition>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" >

            </RowDefinition>
            <RowDefinition Height="*">

            </RowDefinition>
        </Grid.RowDefinitions>

        <Grid x:Name="ChatTitleBar" BackgroundColor="{StaticResource Primary}" Grid.Row="0" Grid.Column="0" ZIndex="1" MinimumHeightRequest="50" MaximumHeightRequest="50">
            <Grid.RowDefinitions>
                <RowDefinition></RowDefinition>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="50">

                </ColumnDefinition>
                <ColumnDefinition>

                </ColumnDefinition>
                <ColumnDefinition>

                </ColumnDefinition>
                <ColumnDefinition Width="Auto">

                </ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Ellipse Fill="Blue" Grid.Row="0" Grid.RowSpan="2" Grid.Column="0" HeightRequest="40" WidthRequest="40"
                             Stroke="White" StrokeThickness="2">

            </Ellipse>
            <Label Grid.Row="0" Grid.Column="1" HorizontalTextAlignment="Start" VerticalTextAlignment="Start" Text="{Binding Chat.Name}" TextColor="White" FontAttributes="Bold" FontSize="16"></Label>
            <StackLayout Grid.Row="0" Grid.Column="3"  Orientation="Horizontal" HorizontalOptions="End">
                <Border BackgroundColor="{StaticResource Primary}" VerticalOptions="Center" HorizontalOptions="Center" StrokeThickness="1" HeightRequest="40" WidthRequest="40">
                    <Border.GestureRecognizers>
                        <TapGestureRecognizer Command="{Binding ExpandChatsMenuCommand}"></TapGestureRecognizer>
                    </Border.GestureRecognizers>
                    <Border.StrokeShape>
                        <RoundRectangle CornerRadius="10,10,10,10">
                        </RoundRectangle>
                    </Border.StrokeShape>
                    <Border.Behaviors>
                        <toolkit:AnimationBehavior>
                            <toolkit:AnimationBehavior.AnimationType>
                                <toolkit:FadeAnimation Opacity="0.5" Easing="{x:Static Easing.BounceOut}" />

                            </toolkit:AnimationBehavior.AnimationType>
                        </toolkit:AnimationBehavior>
                    </Border.Behaviors>
                    <Path HorizontalOptions="Center" VerticalOptions="Center" Data="{StaticResource icons8menusvg}" Stroke="White" StrokeThickness="1" StrokeMiterLimit="10" HeightRequest="24" WidthRequest="24"></Path>
                </Border>
            </StackLayout>
            


        </Grid>
        
        <Grid x:Name="ChatControlsGrid" Grid.Column="0" Grid.Row="1" RowDefinitions="*,Auto" ColumnDefinitions="*">
            <Grid x:Name="ChatEditorMessageControlsGrid" Grid.Row="0" Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition></RowDefinition>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition></ColumnDefinition>
                </Grid.ColumnDefinitions>

                <Border x:Name="ExpandMenu" BackgroundColor="Transparent" Stroke="Transparent" StrokeThickness="2" ZIndex="2" HeightRequest="270" WidthRequest="250" HorizontalOptions="End" VerticalOptions="Start" IsVisible="{Binding ExpandChatMenuIsExpanded,Mode=TwoWay}">
                    <Border.StrokeShape>
                        <RoundRectangle CornerRadius="0,0,0,0">
                        </RoundRectangle>
                    </Border.StrokeShape>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition></RowDefinition>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <ListView Grid.Row="0" 
                                      Grid.Column="0" 
                                      SelectionMode="None"
                                      HorizontalOptions="Center" 
                                      VerticalOptions="Center">
                            <ListView.Style>
                                <Style TargetType="{x:Type ListView}">
                                    
                                </Style>
                            </ListView.Style>
                            
                            <ListView.ItemsSource>
                                <x:Array Type="{x:Type x:String}">
                                    <x:String>Kontakt ansehen</x:String>
                                    <x:String>Medien, Links und Doks</x:String>
                                    <x:String>Suchen</x:String>
                                    <x:String>Notifications stummschalten</x:String>
                                    <x:String>Selbstlöschende Nachrichten</x:String>
                                    <x:String>Mehr</x:String>
                                </x:Array>
                            </ListView.ItemsSource>
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <ViewCell>
                                        <customcontrol:MenuListViewItem customcontrol:MenuListViewItem.Text="{Binding}"></customcontrol:MenuListViewItem>
                                    </ViewCell>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>

                    </Grid>
                </Border>

                <RefreshView x:Name="RefreshView" ZIndex="1" Grid.Row="0" Grid.Column="0" VerticalOptions="Start" HorizontalOptions="Fill" IsRefreshing="{Binding IsChatRefreshing}" Command="{Binding RefreshChatViewCommand}">
                    <CollectionView 
                        x:Name="MessagesList"
                        IsEnabled="True" 
                        ItemsLayout="VerticalList"
                        ItemTemplate="{StaticResource MessageTemplateSelector}" 
                        ItemsSource="{Binding Messages,Mode=TwoWay}" 
                        SelectedItem="{Binding SelectedMessage}" 
                        IsGrouped="True" 
                        CanReorderItems="False" 
                        CanMixGroups="False" 
                        GroupHeaderTemplate="{StaticResource MessageListDateSeparator}" 
                        Margin="5,5,5,5" 
                        SelectionMode="Single" 
                        behaviour:CollectionViewControlsBehaviour.ScrollToEnd="{Binding FocusLastMessage,Mode=OneWay}"
                        >

                    </CollectionView>
                </RefreshView>
                <FlexLayout 
                    ZIndex="2"
                        IsVisible="{Binding IsMessagePresetEntitySelected,Mode=OneWay}"
                        BackgroundColor="Transparent" 
                        AlignItems="End" 
                        AlignContent="End" 
                        Direction="Row" 
                        JustifyContent="Start"
                        Wrap="Wrap">

                    <Border 
                            IsVisible="{Binding IsContactSelected,Mode=OneWay}"
                            StrokeThickness="1"
                            Stroke="{StaticResource Primary}"
                            BackgroundColor="White"
                        HorizontalOptions="Fill"
                        Padding="10">
                        <Border.StrokeShape>
                            <RoundRectangle CornerRadius="25,25,25,25"></RoundRectangle>
                        </Border.StrokeShape>
                        <Label 
                                HorizontalTextAlignment="Center" 
                                VerticalTextAlignment="Center" 
                                HorizontalOptions="Fill" 
                                VerticalOptions="Fill"
                                FontSize="12"
                                FontAttributes="Bold"
                                TextColor="{StaticResource Primary}"
                                Text="{Binding SelectedContact.DisplayName,Mode=TwoWay}"></Label>
                    </Border>
                    <Border IsVisible="{Binding IsGpsLocationSelected,Mode=OneWay}"
                            StrokeThickness="1"
                            Stroke="{StaticResource Primary}"
                            BackgroundColor="White"
                        HorizontalOptions="Fill"
                        Padding="10">
                        <Border.StrokeShape>
                            <RoundRectangle CornerRadius="25,25,25,25"></RoundRectangle>
                        </Border.StrokeShape>
                        <Label 
                                HorizontalTextAlignment="Center" 
                                VerticalTextAlignment="Center" 
                                HorizontalOptions="Center" 
                                VerticalOptions="Center"
                                FontSize="12"
                                FontAttributes="Bold"
                                TextColor="{StaticResource Primary}"
                                Text="{Binding SelectedGpsLocation,Mode=TwoWay}"></Label>
                    </Border>
                </FlexLayout>
                <Border x:Name="ExpandMediaShareMenu" BackgroundColor="White" Stroke="{StaticResource Primary}" StrokeThickness="1" ZIndex="2" HeightRequest="200" VerticalOptions="End" IsVisible="{Binding ExpandAttachmentsIsExpanded,Mode=TwoWay}">
                    <Border.StrokeShape>
                        <RoundRectangle CornerRadius="10,10,10,10">
                        </RoundRectangle>
                    </Border.StrokeShape>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition></RowDefinition>
                            <RowDefinition></RowDefinition>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <StackLayout x:Name="MediaShareMenuRow1" Orientation="Horizontal" Grid.Row="0" Grid.Column="0" HorizontalOptions="Center" VerticalOptions="Center">
                            <customcontrol:MediaShareMenuItem x:Name="SendMediaTypeContactButton" HeightRequest="80" WidthRequest="80" customcontrol:MediaShareMenuItem.TapCommand="{Binding SendContactCommand}" customcontrol:MediaShareMenuItem.IconSvg="{StaticResource icons8contactssvg}"></customcontrol:MediaShareMenuItem>
                            <customcontrol:MediaShareMenuItem x:Name="SendMediaTypeTakePhotoButton" HeightRequest="80" WidthRequest="80" customcontrol:MediaShareMenuItem.TapCommand="{Binding TakePhotoCommand}" customcontrol:MediaShareMenuItem.IconSvg="{StaticResource icons8picturesvg}"></customcontrol:MediaShareMenuItem>
                        </StackLayout>
                        <StackLayout x:Name="MediaShareMenuRow2" Orientation="Horizontal" Grid.Row="1" Grid.Column="0" HorizontalOptions="Center" VerticalOptions="Center">
                            <customcontrol:MediaShareMenuItem x:Name="SendMediaTypeMediaGalleryButton" HeightRequest="80" WidthRequest="80" customcontrol:MediaShareMenuItem.TapCommand="{Binding SendMediaPhotoCommand}" customcontrol:MediaShareMenuItem.IconSvg="{StaticResource icons8contactssvg}"></customcontrol:MediaShareMenuItem>
                            <customcontrol:MediaShareMenuItem x:Name="SendMediaTypeGpsLocationButton" HeightRequest="80" WidthRequest="80" customcontrol:MediaShareMenuItem.TapCommand="{Binding SendGpsLocationCommand}" customcontrol:MediaShareMenuItem.IconSvg="{StaticResource }"></customcontrol:MediaShareMenuItem>
                        </StackLayout>

                    </Grid>
                </Border>

            </Grid>
            <HorizontalStackLayout x:Name="ChatEditorControlsGrid2" 
                  Grid.Row="1" 
                  Grid.Column="0" 
                  HorizontalOptions="Fill"
                  VerticalOptions="Fill">
                <Border 
                    x:Name="MediaShareButton" 
                    BackgroundColor="{StaticResource Primary}" 
                    StrokeThickness="1"
                    WidthRequest="40"
                    HorizontalOptions="Start">
                    <Border.GestureRecognizers>
                        <TapGestureRecognizer Command="{Binding ExpandAttachmentsCommand}"></TapGestureRecognizer>
                    </Border.GestureRecognizers>
                    <Border.StrokeShape>
                        <RoundRectangle CornerRadius="10,10,10,10">
                        </RoundRectangle>
                    </Border.StrokeShape>
                    <Border.Behaviors>
                        <toolkit:AnimationBehavior>
                            <toolkit:AnimationBehavior.AnimationType>
                                <toolkit:FadeAnimation Opacity="0.5" Easing="{x:Static Easing.BounceOut}" />

                            </toolkit:AnimationBehavior.AnimationType>
                        </toolkit:AnimationBehavior>
                    </Border.Behaviors>
                    <Path HorizontalOptions="End" VerticalOptions="End" Data="{StaticResource PaperClipSvg}" Stroke="White" StrokeThickness="1" HeightRequest="36" WidthRequest="36"></Path>
                </Border>
                <Editor 
                        Text="{Binding Text,Mode=TwoWay}" 
                        IsSpellCheckEnabled="True" 
                        Keyboard="Chat" 
                    WidthRequest="295"
                        Margin="0,0,0,0"
                        HorizontalOptions="Fill"
                        IsTextPredictionEnabled="True" 
                        Placeholder="Your Message..." 
                        AutoSize="TextChanges"
                        Focused="Editor_Focused" 
                        Unfocused="Editor_Unfocused">
                </Editor>
                <Button
                    x:Name="SendButton"
                    Command="{Binding SendMessageCommand}"
                    Text="Send" 
                    Grid.Row="0" 
                    Grid.Column="2"
                    HorizontalOptions="End"
                    Margin="-1,0,50,0">
                </Button>
            </HorizontalStackLayout>
        </Grid>

    </Grid>

</customcontrol:CustomContentPage>